stages:
  - check
  - test
  - build
  - publish
  - optional

image:                             parity/rust-ci

variables:
  GIT_STRATEGY:                    fetch
  GIT_SUBMODULE_STRATEGY:          recursive
  CI_SERVER_NAME:                  "GitLab CI"
  CARGO_HOME:                      "${CI_PROJECT_DIR}/.cargo"
  CARGO_TARGET:                    x86_64-unknown-linux-gnu

before_script:
  - date
  # - source scripts/utils.sh
  # - date
  # - source scripts/prepare_build.sh

after_script:
  - date


# .releaseable_branches:             # list of git refs for building GitLab artifacts (think "pre-release binaries")
#   only:                            &releaseable_branches
#     - stable
#     - beta
#     - tags
#     - schedules


.collect_artifacts:                &collect_artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${SCHEDULE_TAG:-${CI_COMMIT_REF_NAME}}"
    when:                          on_success
    expire_in:                     1 mos
    paths:
    - artifacts/

# .determine_version:                &determine_version
#   - VERSION="$(sed -r -n '1,/^version/s/^version = "([^"]+)".*$/\1/p' Cargo.toml)"
#   - DATE_STR="$(date +%Y%m%d)"
#   - ID_SHORT="$(echo ${CI_COMMIT_SHA} | cut -c 1-7)"
#   - test "${SCHEDULE_TAG:-${CI_COMMIT_REF_NAME}}" = "nightly" && VERSION="${VERSION}-${ID_SHORT}-${DATE_STR}"
#   - export VERSION
#   - echo "Version = ${VERSION}"

.cachew:                            &cachew
  before_script:
    - rustup show
    - cargo --version
    - mkdir -p target
    - du -hs target
    - du -hs $CARGO_HOME
  after_script:
    - du -hs target
    - du -hs $CARGO_HOME

cache:
  key:                            "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
  paths:
  # - target/
  - $CARGO_HOME

.cargo_check:
  only:
    - pushes
  script:
    - cargo check

push:cargo:
  stage:                           check
  extends:                         .cargo_check
  <<:                              *cachew
  tags:
    - ci2

.test-linux:                       &test-linux
  stage:                           test
  # variables:
  #   RUN_TESTS:                     all
  <<:                              *cachew
  script:
    - set -e # fail on any error
    - set -u # treat unset variables as error
    - git log --graph --oneline --decorate=short -n 10
    # - git submodule update --init --recursive
    # - echo "________Validate chainspecs________"
    # - time ./scripts/validate_chainspecs.sh
    - echo "________Running Parity Full Test Suite________"
    - time cargo test --release --features json-tests ci-skip-issue --all --target $CARGO_TARGET -v -- --test-threads 8
  tags:
    - ci2

.test-cpp:                         &test-cpp
  stage:                           test
  <<:                              *cachew
  script:
    - set -e # fail on any error
    - set -u # treat unset variables as error
    - git log --graph --oneline --decorate=short -n 10
    # - git submodule update --init --recursive
    - echo "________Running the C++ example________"
    - CPP_DIR=./parity-clib-examples/cpp
    - time cmake -B"$CPP_DIR/build" -H"$CPP_DIR"
    - time make -C $CPP_DIR/build -j 8
    - time $CPP_DIR/build/parity-example
    - rm -rf $CPP_DIR/build
  tags:
    - ci2

.test-val-chain:                   &test-val-chain
  stage:                           test
  <<:                              *cachew
  script:
    - set -e # fail on any error
    - set -u # treat unset variables as error
    - git log --graph --oneline --decorate=short -n 10
    # - git submodule update --init --recursive
    - echo "________Validate chainspecs________"
    - time ./scripts/validate_chainspecs.sh
  tags:
    - ci2

.build-linux:                      &build-linux
  stage:                           build
  # only:                            *releaseable_branches
  variables:
    CARGO_TARGET:                  x86_64-unknown-linux-gnu
  script:
    - scripts/gitlab/build-unix.sh
    # - cargo build --all # (--release -features_final)
  <<:                              *cachew
  <<:                              *collect_artifacts
  tags:
    - ci2

.build-darwin:                     &build-darwin
  stage:                           build
  # only:                            *releaseable_branches
  variables:
    CARGO_TARGET:                  x86_64-apple-darwin
    CC:                            gcc
    CXX:                           g++
  script: 
    - scripts/gitlab/build-unix.sh
  <<:                              *cachew
  tags:
    # - rust-osx
    - ci2
  <<:                              *collect_artifacts

.build-windows:                    &build-windows
  stage:                           build
  # only:                            *releaseable_branches
  variables:
    CARGO_TARGET:                  x86_64-pc-windows-gnu
  script:
    - sh scripts/gitlab/build-windows.sh
  <<:                              *cachew
  tags:
   # - rust-windows
   - ci2
  <<:                              *collect_artifacts

.build-android:                    &build-android
  stage:                           build
  image:                           parity/rust-android:gitlab-ci
  variables:
    CARGO_TARGET:                  armv7-linux-androideabi
  script:
    - scripts/gitlab/build-unix.sh
  <<:                              *cachew
  tags:
    - ci2
    # - rust-arm
  <<:                              *collect_artifacts # ?

# push pipeline
push:build-android:
  <<:                              *build-android
  dependencies:
    - push:cargo
    - push:test-linux
    - push:test-cpp
  only:
    - pushes

push:build-windows:
  <<:                              *build-windows
  dependencies:
    - push:cargo
    - push:test-linux
    - push:test-cpp
  only:
    - pushes

push:build-darwin:
  <<:                              *build-darwin
  dependencies:
    - push:cargo
    - push:test-linux
    - push:test-cpp
  only:
    - pushes

push:build-linux:
  <<:                              *build-linux
  dependencies:
    - push:cargo
    - push:test-linux
    - push:test-cpp
    - push:test-val-chain
  only:
    - pushes

push:test-linux:
  <<:                              *test-linux
  dependencies:
    - push:cargo
    # - push:test-val-chain
  only:
    - pushes

push:test-cpp:
  <<:                              *test-cpp
  dependencies:
    - push:cargo
    # - push:test-val-chain
  only:
    - pushes

push:test-val-chain:
  <<:                              *test-val-chain
  only:
    - pushes




# publish-docker:
#   stage:                           publish
#   only:                            *releaseable_branches
#   cache: {}
#   dependencies:
#     - build-linux
#   tags:
#     - shell
#   script:
#     - scripts/gitlab/publish-docker.sh parity

# publish-awss3:
#   stage:                           publish
#   only:                            *releaseable_branches
#   cache: {}
#   dependencies:
#     - build-linux
#     - build-darwin
#     - build-windows
#   before_script:                   *determine_version
#   script:
#     - scripts/gitlab/publish-awss3.sh
#   tags:
#     - shell

# docs-jsonrpc:
#   stage:                            optional
#   only:
#     - tags
#   except:
#     - nightly
#   cache: {}
#   script:
#     - scripts/gitlab/docs-jsonrpc.sh
#   tags:
#     - ci2

cargo-audit:
  stage:                           optional
  script:
    - scripts/gitlab/cargo-audit.sh
  tags:
    - ci2

# test-beta:
#   stage:                           optional
#   variables:
#     RUN_TESTS:                     cargo
#   script:
#     - scripts/gitlab/test-all.sh beta
#   tags:
#     - ci2

# test-nightly:
#   stage:                           optional
#   variables:
#     RUN_TESTS:                     all
#   script:
#     - scripts/gitlab/test-all.sh nightly
#   tags:
#     - ci2
